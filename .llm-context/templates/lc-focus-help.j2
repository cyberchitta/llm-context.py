## Creating Focused Rules

Create task-focused rules by deciding what you need to see to complete the task:

**Full content:** Files you need to read/modify/understand in detail
**Outlined:** Files where you just need to know structure/what's available

### Decision Framework:
- Will I need to see the actual implementation? → Full
- Do I just need to know what functions/classes exist? → Outline  
- Is it small enough that full content doesn't add noise? → Full
- Is it large where outline gives me what I need? → Outline

### Example Task: "Fix authentication validation bug"
- **Full content:** `/{{ project_name }}/src/auth/validator.py`, `/{{ project_name }}/tests/test_validator.py` (need to see implementation)
- **Outlined:** `/{{ project_name }}/src/auth/models.py`, `/{{ project_name }}/src/auth/utils.py` (just need to know what's available)

---

{% if tools_available %}
## Implementation: Using Tools

Use the `lc-create-rule` tool:

```json
{
  "rule_name": "tmp-fix-auth-bug",
  "description": "Fix authentication validation bug",
  "files": ["/{{ project_name }}/src/auth/validator.py", "/{{ project_name }}/tests/test_validator.py"],
  "outlines": ["/{{ project_name }}/src/auth/models.py", "/{{ project_name }}/src/auth/utils.py"],
  "content": "Focus on validator logic with supporting context from models and utils."
}
```

{% else %}
## Implementation: Manual Creation

Generate the complete rule and save it using shell commands:

**Example for "Fix authentication validation bug":**

```bash
# Create the rule file
cat > .llm-context/rules/tmp-fix-auth-bug.md << 'EOF'
---
description: "Fix authentication validation bug"
compose:
  filters: ["lc-no-files"]
files:
  - "/{{ project_name }}/src/auth/validator.py"
  - "/{{ project_name }}/tests/test_validator.py"
outlines:
  - "/{{ project_name }}/src/auth/models.py"
  - "/{{ project_name }}/src/auth/utils.py"
---

## Authentication Bug Fix
Focus on validator logic with supporting context from models and utils.
EOF

# Activate the rule and generate context
lc-set-rule tmp-fix-auth-bug
lc-context
```

This gives you a complete sequence: create rule → activate → generate context.

{% endif %}